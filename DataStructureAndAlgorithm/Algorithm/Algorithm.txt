
알고리즘
- 주어진 문제를 해결하기 위한 단계적인 절차나 방법


알고리즘의 5대 조건
1)입력
   - 0개 이상의 입력이 존재해야 함

2)출력
   - 1개 이상의 출력이 존재해야 함

3)명백성
   - 각 명령어의 의미는 모호하지 않고 명확해야 함

4)유한성
   - 한정된 수의 단계 후에는 반드시 종료되어야 함

5)유효성
   - 각 명령어들은 실행 가능한 연산이어야 함


효율적인 알고리즘 조건
- 알고리즘의 실행 시간이 짧아야 함
- 메모리와 같은 자원들 덜 사용해야 함


알고리즘 분석
- 시간 복잡도(Time Complexity, T(n))
   - 알고리즘의 실행 시간 분석

- 공간 복잡도(Space Complexity, S(n))
   - 알고리즘이 사용하는 메모리 공간 분석

- 빅오 표기법(O(n))
   - 불필요한 정보를 제거하여 알고리즘 분석을 쉽게 할 목적으로 시간 복잡도를 표시하는 방법

   - 복잡도 함수에서 최고차 항의 차수만을 고려, 최고차 항의 계수와 다른 항들과 상수는 버림
      ex) f(n) = 5 => O(1) 상수는 무조건 1
          f(n) = 2n + 1 => O(n)
          f(n) = 3n^2 + 2n => O(n^2)
          f(n) = 5*2^n => O(2^n)

   - O(1)(상수형) < O(logn)(로그형) < O(n)(선형) < O(n logn)(선형로그형) < O(n^2)(2차형) < O(n^3)(3차형) < O(2^n)(지수형) < O(n!)(팩토리얼형) < O(n^n)(n차형)


순환(Recursion)
- 어떤 알고리즘이나 함수가 자기 자신을 호출하여 문제를 해결하는 알고리즘

- 호출된 함수를 탈출하는 조건이 있어야 함
   - 탈출 조건이 없다면 시스템 스택을 다 사용하여 스택 오버플로우 현상이 일어남

- 함수(자기 자신) 호출을 하게 되므로 수행속도 면에서는 떨어짐
   - 함수를 호출하면 메모리의 스택 영역에 복귀주소를 저장하고 함수에서 사용하는 매개 변수와 지역 변수를 할당받는 등 사전 작업이 필요하기 때문

- 순환 호출이 일어날 때마다 문제의 크기가 작아짐

- 팩토리얼 함수 계산, 피보나치 수열,  이항 계수 계산, 각종 이진 트리 알고리즘, 이진 탐색, 하노이탑 등 사용